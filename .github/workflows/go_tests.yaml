name: golang-tests
on:
  push:
    tags:
      - v*
    branches:
      - master
  pull_request:
jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:8.0.19
        env:
          MYSQL_ROOT_PASSWORD: githubactionpassword
          MYSQL_DATABASE: testing_cribbage
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14.x
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.3.0
        with:
          mongodb-version: 4.2
          mongodb-replica-set: testReplSet
      - name: Setup local DynamoDB
        run: docker run -p 18079:8000 amazon/dynamodb-local -jar DynamoDBLocal.jar -sharedDb -inMemory &
      - name: Copy over the aws creds/config
        run: cp -r ./server/persistence/dynamo/.dockerComposeAWS $HOME/.aws
      - name: curl to dynamo
        run: curl http://127.0.0.1:18079 || (sleep 5s && curl http://127.0.0.1:18079 || (sleep 5s && curl http://127.0.0.1:18079))
      - name: Create dynamoDB table
        run: aws dynamodb create-table --endpoint-url http://127.0.0.1:18079 --billing-mode PAY_PER_REQUEST --region us-west-2 --table-name cribbage --attribute-definitions AttributeName=DDBid,AttributeType=S AttributeName=spec,AttributeType=S --key-schema AttributeName=DDBid,KeyType=HASH AttributeName=spec,KeyType=Range
      - name: get go-acc
        run: go get -u github.com/ory/go-acc
      - name: Run Golang Tests
        run: go-acc -o coverage.txt ./...
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.txt
          # flags: unittests
          # env_vars: OS,PYTHON
          # name: codecov-umbrella
          fail_ci_if_error: true
  dockerimage:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Check out code

      - uses: docker/build-push-action@v1
        name: Build and Push Docker image
        with:
          repository: joshprzybyszewski/cribbage
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tag_with_ref: true
          add_git_labels: true
          tag_with_sha: false
          cache_froms: joshprzybyszewski/cribbage:latest
